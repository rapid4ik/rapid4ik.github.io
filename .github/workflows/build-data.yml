name: Build GitHub data

on:
  schedule:
    - cron: "*/10 * * * *"   # каждые 10 минут (UTC)
  workflow_dispatch:         # возможность запустить вручную

permissions:
  contents: write            # нужно, чтобы коммитить файлы

concurrency:
  group: build-data
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 8  # чтобы зависший ран не блокировал следующие

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # чтобы git diff/commit корректно работали

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build JSON files
        env:
          GH_USERNAME: rapid4ik
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: UTC
        run: |
          node -v
          # (опционально) показать текущее UTC‑время в логах
          date -u "+%Y-%m-%dT%H:%M:%SZ"
          node scripts/build-data.mjs

      - name: Show git status
        run: |
          git status --porcelain
          git diff --name-only -- data || true

      - name: Commit & push if changed
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # важно: если что-то реально поменялось в data/, тогда коммитим
          if ! git diff --quiet -- data; then
            git add data
            git commit -m "chore(data): refresh GitHub data [skip ci]"
            # на всякий случай подтянуть изменения и запушить
            git pull --rebase --autostash origin "${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}" || true
            git push
          else
            echo "No changes in data/."
          fi
